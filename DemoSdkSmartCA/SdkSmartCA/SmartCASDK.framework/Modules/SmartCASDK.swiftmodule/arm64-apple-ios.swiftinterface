// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SmartCASDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import DeveloperToolsSupport
import Flutter
import FlutterPluginRegistrant
import Foundation
import ICSdkEKYC
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import eContractSDK
public struct SmartCAResult {
  public var status: Swift.Int
  public var statusDesc: Swift.String
  public var data: Swift.String
  public init(map: [Swift.String : Any?])
  public func toJson() -> [Swift.String : Any]
}
@_hasMissingDesignatedInitializers public class SmartCAResultCode {
  public static var REQUIRED_OPEN_SDK: Swift.Int
  public static var UNKNOWN_ERROR_CODE: Swift.Int
  public static var USER_CANCEL_CODE: Swift.Int
  public static var SUCCESS_CODE: Swift.Int
  @objc deinit
}
public class VNPTSmartCASDK {
  public var flutterEngine: Flutter.FlutterEngine {
    get
    set
  }
  public enum ENVIRONMENT : Swift.Int {
    case DEMO, PRODUCTION
    public init?(rawValue: Swift.Int)
    public typealias RawValue = Swift.Int
    public var rawValue: Swift.Int {
      get
    }
  }
  public enum LANG : Swift.String {
    case VI, EN
    public init?(rawValue: Swift.String)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
  public init(viewController: UIKit.UIViewController, partnerId: Swift.String, environment: SmartCASDK.VNPTSmartCASDK.ENVIRONMENT, lang: SmartCASDK.VNPTSmartCASDK.LANG, isFlutterApp: Swift.Bool = false)
  public func configSDK()
  public func getAuthentication(callback: @escaping (SmartCASDK.SmartCAResult) -> Swift.Void)
  public func getWaitingTransaction(tranId: Swift.String, callback: @escaping (SmartCASDK.SmartCAResult) -> Swift.Void)
  public func getMainInfo(callback: @escaping (SmartCASDK.SmartCAResult) -> Swift.Void)
  public func signOut(callback: @escaping (SmartCASDK.SmartCAResult) -> Swift.Void)
  public func destroySDK()
  @objc deinit
}
public let ENVIRONMENT_DEMO: Swift.Int
public let ENVIRONMENT_PRODUCTION: Swift.Int
public let LANG_EN: Swift.String
public let LANG_VI: Swift.String
extension SmartCASDK.VNPTSmartCASDK.ENVIRONMENT : Swift.Equatable {}
extension SmartCASDK.VNPTSmartCASDK.ENVIRONMENT : Swift.Hashable {}
extension SmartCASDK.VNPTSmartCASDK.ENVIRONMENT : Swift.RawRepresentable {}
extension SmartCASDK.VNPTSmartCASDK.LANG : Swift.Equatable {}
extension SmartCASDK.VNPTSmartCASDK.LANG : Swift.Hashable {}
extension SmartCASDK.VNPTSmartCASDK.LANG : Swift.RawRepresentable {}
